// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/disconnect": {
            "post": {
                "description": "logs user hubs and devices as disconnected; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "disconnected webhook",
                "parameters": [
                    {
                        "description": "disconnect info",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.DisconnectWebhookMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "checks auth; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "login webhook",
                "parameters": [
                    {
                        "description": "login infos",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.LoginWebhookMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.OkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/online": {
            "post": {
                "description": "logs hub as connected; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "online webhook",
                "parameters": [
                    {
                        "description": "client infos",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.OnlineWebhookMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/publish": {
            "post": {
                "description": "checks auth for the published message and forwards it to kafka; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "publish webhook",
                "parameters": [
                    {
                        "description": "publish message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.PublishWebhookMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.OkResponse"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.RedirectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscribe": {
            "post": {
                "description": "checks auth for the subscription; SubscriptionResponse.Topics.Qos==128 signals rejected subscription; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "subscribe webhook",
                "parameters": [
                    {
                        "description": "subscription message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.SubscribeWebhookMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.OkResponse"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.SubscribeWebhookResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/unsubscribe": {
            "post": {
                "description": "logs device as disconnected; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "unsubscribe webhook",
                "parameters": [
                    {
                        "description": "topic infos",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.UnsubscribeWebhookMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.UnsubResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/vernemqtt.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "vernemqtt.DisconnectWebhookMsg": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.EmptyResponse": {
            "type": "object"
        },
        "vernemqtt.ErrorResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/vernemqtt.ErrorResponseResult"
                }
            }
        },
        "vernemqtt.ErrorResponseResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.LoginWebhookMsg": {
            "type": "object",
            "properties": {
                "clean_session": {
                    "description": "v4",
                    "type": "boolean"
                },
                "clean_start": {
                    "description": "v5",
                    "type": "boolean"
                },
                "client_id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "peer_addr": {
                    "type": "string"
                },
                "peer_port": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.OkResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string",
                    "default": "ok",
                    "example": "ok"
                }
            }
        },
        "vernemqtt.OnlineWebhookMsg": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.PublishWebhookMsg": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "qos": {
                    "type": "integer"
                },
                "topic": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.RedirectModifiers": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "string",
                    "example": "base-64-encoded-payload"
                },
                "qos": {
                    "type": "integer"
                },
                "retain": {
                    "type": "boolean"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.RedirectResponse": {
            "type": "object",
            "properties": {
                "modifiers": {
                    "$ref": "#/definitions/vernemqtt.RedirectModifiers"
                },
                "result": {
                    "type": "string",
                    "default": "ok",
                    "example": "ok"
                }
            }
        },
        "vernemqtt.SubscribeWebhookMsg": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vernemqtt.WebhookmsgTopic"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.SubscribeWebhookResult": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vernemqtt.WebhookmsgTopic"
                    }
                }
            }
        },
        "vernemqtt.UnsubResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string",
                    "default": "ok",
                    "example": "ok"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "vernemqtt.UnsubscribeWebhookMsg": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "vernemqtt.WebhookmsgTopic": {
            "type": "object",
            "properties": {
                "qos": {
                    "type": "integer"
                },
                "topic": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Mqtt-Connector-Webhooks",
	Description:      "webhooks for vernemqtt; all responses are with code=200, differences in swagger doc are because of technical incompatibilities of the documentation format",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
